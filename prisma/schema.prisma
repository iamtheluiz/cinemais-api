// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite"
  url      = env("DATABASE_URL")
}

model User {
  id        Int    @id @default(autoincrement())
  email     String @unique
  firstName String
  lastName  String
  password  String
  role      String // admin, client
}

model Cine {
  id      Int       @id @default(autoincrement())
  name    String
  logo    String
  city    City      @relation(fields: [cityId], references: [id])
  cityId  Int
  session Session[]
}

model Movie {
  id       Int         @id @default(autoincrement())
  name     String
  synopsis String
  trailer  String
  cover    String
  duration Decimal
  genres   Genre[]
  sessions Session[]
  cast     MovieCast[]
}

model Genre {
  id     Int     @id @default(autoincrement())
  name   String
  movies Movie[]
}

model Cast {
  id      Int         @id @default(autoincrement())
  name    String
  picture String
  bio     String
  movies  MovieCast[]
}

model MovieCast {
  id        Int     @id @default(autoincrement())
  role      String
  character String?
  movie     Movie   @relation(fields: [movieId], references: [id])
  cast      Cast    @relation(fields: [castId], references: [id])
  movieId   Int
  castId    Int
}

model Session {
  id        Int      @id @default(autoincrement())
  room      String
  startDate DateTime
  endDate   DateTime
  cine      Cine     @relation(fields: [cineId], references: [id])
  movie     Movie    @relation(fields: [movieId], references: [id])
  movieId   Int
  cineId    Int
}

model City {
  id       Int     @id @default(autoincrement())
  cines    Cine[]
  region   Region? @relation(fields: [regionId], references: [id])
  regionId Int?
}

model Region {
  id     Int    @id @default(autoincrement())
  cities City[]
}

// model Post {
//   id        Int     @id @default(autoincrement())
//   title     String
//   content   String?
//   published Boolean @default(false)
//   author    User    @relation(fields: [authorId], references: [id])
//   authorId  Int
// }
