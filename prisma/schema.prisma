// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
  previewFeatures = ["clientExtensions"]
}

datasource db {
  provider = "sqlite"
  url      = env("DATABASE_URL")
}

model User {
  id        Int    @id @default(autoincrement())
  email     String @unique
  firstName String
  lastName  String
  password  String
  role      String // admin, client
}

model Cine {
  id        Int       @id @default(autoincrement())
  name      String
  logo      String
  latitude  Decimal   @default(-23.9781355)
  longitude Decimal   @default(-46.308471)
  city      City      @relation(fields: [cityId], references: [id])
  cityId    Int
  session   Session[]
  distance  Float?
}

model Movie {
  id       Int       @id @default(autoincrement())
  name     String
  synopsis String
  trailer  String
  cover    String
  duration Decimal
  genres   Genre[]
  sessions Session[]
  cast     Cast[]
}

model Genre {
  id     Int     @id @default(autoincrement())
  name   String
  color  String  @default("#000000")
  movies Movie[]
}

model Cast {
  id      Int     @id @default(autoincrement())
  name    String
  picture String
  bio     String
  movies  Movie[]
}

// =================
// Cast Backup
// model Cast {
//   id      Int         @id @default(autoincrement())
//   name    String
//   picture String
//   bio     String
//   movies  MovieCast[]
// }

// model MovieCast {
//   id        Int     @id @default(autoincrement())
//   role      String
//   character String?
//   movie     Movie   @relation(fields: [movieId], references: [id])
//   cast      Cast    @relation(fields: [castId], references: [id])
//   movieId   Int
//   castId    Int
// }
// =================

model Session {
  id        Int      @id @default(autoincrement())
  room      String
  startDate DateTime
  endDate   DateTime
  cine      Cine     @relation(fields: [cineId], references: [id])
  movie     Movie    @relation(fields: [movieId], references: [id])
  movieId   Int
  cineId    Int
}

model City {
  id        Int      @id @default(autoincrement())
  name      String
  latitude  Decimal
  longitude Decimal
  cines     Cine[]
  regions   Region[]
}

model Region {
  id        Int     @id @default(autoincrement())
  name      String
  latitude  Decimal
  longitude Decimal
  cities    City[]
}

// model Post {
//   id        Int     @id @default(autoincrement())
//   title     String
//   content   String?
//   published Boolean @default(false)
//   author    User    @relation(fields: [authorId], references: [id])
//   authorId  Int
// }
